name: "Golang code checks"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  format:
    name: format go files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Format
        uses: Jerome1337/gofmt-action@v1.0.4
        with:
          gofmt-path: '.'
          gofmt-flags: '-l -d'
  lint:
    name: lint go files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run linter
        uses: golangci/golangci-lint-action@v2
        with:
          args: --config ./.golangci.yaml
          version: latest
  build:
    name: build binary
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build binary
        run: go build .
  test-and-cov:
    name: run tests and generate code coverage profile
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.17'
      - name: Run tests
        run: go test -race -covermode=atomic -coverprofile=coverage.out --v
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          files: ./coverage.out
          fail_ci_if_error: true
